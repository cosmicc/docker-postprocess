#!/usr/bin/env python3

import subprocess
from pathlib import Path
from sys import exit
from time import sleep

from loguru import logger as log

log.add(sink=str('/config/logs/poller.log'), level=3, buffering=1, enqueue=True, backtrace=False, diagnose=False, serialize=False, colorize=False, delay=False)

process_path = Path('/poll')
mp4logpath = Path('/config/logs/mp4_automator').mkdir(parents=True, exist_ok=True)


if not process_path.exists():
    log.error('Poll directory does not exist!')
    exit(1)

log.info('Poller is starting...')

while True:
    try:
        skipsleep = False
        for file in process_path.iterdir():
            if file.suffix != '.ignored':
                fcontents = file.read_text()
                fsplit = fcontents.split('|')
                if len(fsplit) < 4:
                    log.warning(f'Cannot parse process file contents ({str(file)})')
                    file.rename(file.with_suffix('.ignored'))
                else:
                    if fsplit[0] == 'deluge':
                        log.info(f'Processing Deluge download {fsplit[2]}')
                        cmd = ['/opt/mp4_automator/delugePostProcess.py', f'{fsplit[1]}', f'{fsplit[2]}', f'{fsplit[3]}']
                        log.debug(cmd)
                        subprocess.Popen(cmd).wait()
                        file.unlink()
                        skipsleep = True
                    elif fsplit[0] == 'sonarr':
                        log.info(f'Processing Sonarr postprocess {fsplit[3]}')
                        skipsleep = True
                    elif fsplit[0] == 'radarr':
                        log.info(f'Processing Radarr postprocess {fsplit[3]}')
                        skipsleep = True
                    log.info(f'Finished Processing of {str(file)}')
    except:
        log.exception('Error in poller script:')
        exit(1)
    if not skipsleep:
        sleep(60)
